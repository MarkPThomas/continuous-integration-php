# Config file for https://travis-ci.org/
# Validate this file here - http://lint.travis-ci.org/

language: php

# Define the php versions against we want to test our code
php:
    - 7.0

environment:
#  COVERALLS_RUN_LOCALLY=1
  COVERALLS_REPO_TOKEN=paA4WjNDLj9DiIHDvWJ6GDF2QON8VUNuc
#  COVERALLS_REPO_TOKEN:
#    secure: paA4WjNDLj9DiIHDvWJ6GDF2QON8VUNuc
#    secure: Akv0BufyuSYL7zT8E4MUFcq1Cj0j9mQaw3xv+JJhhKD4F/j3YTPvz5DBqNvTs5Tu

# Note: Code coverage requires php-xDebug extension enabled on CI server
#before_install:
#  - composer require phpunit/phpunit:4.8.* satooshi/php-coveralls:dev-master
#  - composer require satooshi/php-coveralls:dev-master
#  - composer install --dev

install:
  # Install composer packages
#  - travis_retry composer install --no-interaction --no-suggest

  # Install coveralls.phar
#  - wget -c -nc --retry-connrefused --tries=0 https://github.com/php-coveralls/php-coveralls/releases/download/v2.0.0/php-coveralls.phar -O coveralls.phar

  # Make coveralls.phar executable: chmod +x on a file (your script) only means, that you'll make it executable.
#  - chmod +x coveralls.phar
#  - php coveralls.phar --version

  - composer install --prefer-dist --no-interaction --no-progress
#  - composer update

# Create a storage folder for coverage report
before_script:
  - mkdir -p build/logs
  - ls -al

# Testing the app (see phpunit.xml) for configs, generating Code Coverage report
script:
  - ./vendor/bin/phpunit --coverage-clover ./build/logs/clover.xml


#after_script:
after_script:
 - php vendor/bin/coveralls -v

#after_success:
# Submit coverage report to Coveralls servers, see .coveralls.yml
#  - travis_retry php coveralls.phar -v

#after_failure:

# Tell Travis CI to monitor only 'master' branch
branches:
  only: master

# You can delete the cache using travis-ci web interface
cache:
  directories:
  - vendor
  - $HOME/.cache/composer